<?php

namespace Everest\Http\Controllers\Api\Application\Billing;

use Carbon\Carbon;
use Everest\Facades\Activity;
use Illuminate\Http\Response;
use Everest\Models\Billing\Product;
use Everest\Models\Billing\Category;
use Symfony\Component\HttpFoundation\StreamedResponse;
use Everest\Services\Billing\BillingConfigImportService;
use Everest\Http\Controllers\Api\Application\ApplicationApiController;
use Everest\Http\Requests\Api\Application\Billing\Config\ExportBillingConfigRequest;
use Everest\Http\Requests\Api\Application\Billing\Config\ImportBillingConfigRequest;

class ConfigController extends ApplicationApiController
{
    /**
     * ConfigController constructor.
     */
    public function __construct(
        private BillingConfigImportService $importService,
    ) {
        parent::__construct();
    }

    /**
     * Export the linked categories and products on this Panel.
     *
     * @throws \Throwable
     */
    public function export(ExportBillingConfigRequest $request): StreamedResponse
    {
        $data = [
            'export_info' => [
                'warning' => 'This file was automatically generated by Jexactyl v4. Do NOT edit this file unless you know what you are doing.',
                'requested_by' => (string) $request->user()->uuid,
                'requested_at' => (string) Carbon::now(),
            ],
            'categories' => Category::all(),
            'products' => Product::all(),
        ];

        Activity::event('admin:billing:config:export')
            ->description('User exported Jexactyl billing configuration')
            ->log();

        return response()->stream(function () use ($data) {
            echo json_encode($data, JSON_PRETTY_PRINT);
        }, 200, [
            'Content-Type' => 'application/json',
            'Content-Disposition' => 'attachment; filename="data.json"',
        ]);
    }

    /**
     * Import a billing configuration file to Jexactyl.
     *
     * @throws \Throwable
     */
    public function import(ImportBillingConfigRequest $request): Response
    {
        $data = (array) $request->input('data');
        $override = (bool) $request->input('override');
        $ignore_duplicates = (bool) $request->input('ignore_duplicates');

        if ($override) {
            Category::query()->delete();
            Product::query()->delete();
        }

        $this->importService->handle($data, $override ? false : $ignore_duplicates);

        Activity::event('admin:billing:config:import')
            ->property('override', $override)
            ->property('ignore_duplicates', $ignore_duplicates)
            ->description('User imported Jexactyl billing configuration')
            ->log();

        return $this->returnNoContent();
    }
}
